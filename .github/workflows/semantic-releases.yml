name: Semantic Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./app/requirements.txt
        pip install python-semantic-release toml

    - name: Debug pyproject.toml
      run: |
        echo "Content of pyproject.toml:"
        cat pyproject.toml
        echo "Validating TOML format:"
        python -c "import toml; toml.load('pyproject.toml')"


    - name: Check for existing tags
      id: check-tags
      run: |
        if [ -z "$(git tag -l)" ]; then
          echo "No tags found. Will create initial tag."
          echo "create_initial_tag=true" >> $GITHUB_OUTPUT
        else
          echo "Existing tags found."
          echo "create_initial_tag=false" >> $GITHUB_OUTPUT
        fi

    - name: Create initial tag if needed
      if: steps.check-tags.outputs.create_initial_tag == 'true'
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git tag -a v0.1.0 -m "Initial release"
        git push origin v0.1.0

    - name: Semantic Release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        semantic-release publish

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}